ChatApp Conversation 10/11/2024 10:20:44
=========================================

bot: Hello, how can I help?

user: Please show an example of how to set up a simple node server to display a static web page.

bot: Sure, setting up a simple Node.js server to serve a static web page is fairly straightforward. Below is an example using Express, a popular Node.js web application framework.

First, make sure you have Node.js and npm installed. You can download them from [Node.js official site](https://nodejs.org/).

1. Create a new directory for your project and navigate into it:

```sh
mkdir my-static-website
cd my-static-website
```

2. Initialize a new Node.js project:

```sh
npm init -y
```

3. Install Express:

```sh
npm install express
```

4. Create a new file called `server.js` and add the following code to set up the server:

```js
const express = require('express');
const path = require('path');
const app = express();
const PORT = 3000;

// Serve static files from the 'public' directory
app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
```

5. Create a `public` directory in the root of your project. Inside the `public` directory, create an `index.html` file with some basic HTML content:

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Static Website</title>
</head>
<body>
  <h1>Welcome to My Static Website</h1>
  <p>This is a simple static web page served by a Node.js server.</p>
</body>
</html>
```

6. Start the server by running the following command in your terminal:

```sh
node server.js
```

7. Open your web browser and navigate to `http://localhost:3000`. You should see your static web page displayed.

That's it! You've set up a simple Node.js server using Express to serve a static web page.